{"version":3,"sources":["Card.js","CardContainer.js","text.js","SearchBar.js","App.js","serviceWorker.js","index.js"],"names":["Card","name","this","props","url","img","idx","rating","location","switchIdx","console","log","lightSwitches","map","lSw","newSwitch","react_default","a","createElement","key","uuidv4","className","concat","target","href","src","alt","Component","openShiftUrl","CardContainer","state","businesses","searchInitiated","loading","nextProps","terms","join","getDataFromBackend","_this2","setState","axios","get","then","res","Object","values","data","_this3","cardArray","forEach","biz","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","term","value","includes","push","err","return","src_Card","id","image_url","display_address","chicletIdx","termChiclets","SearchBar","termInput","locInput","invalidSearch","handleChange","evt","_this","defineProperty","handleAddTerm","preventDefault","length","toConsumableArray","slice","reset","handleRemoveTerm","deletedTerm","updatedTerms","filter","handleSetLocation","handleSubmitSearch","passedTerms","passedLocation","triggerSearch","onClick","uuidv1","onSubmit","type","onChange","App","_this$state","src_SearchBar","src_CardContainer","Boolean","window","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d49e8b7d.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport uuidv4 from 'uuid/v4';\n\nclass Card extends Component {\n  render() {\n    const name = this.props.name;\n    const url = this.props.url;\n    const img = this.props.img;\n    const idx = this.props.idx;\n    const rating = this.props.rating;\n    const location = this.props.location;\n    let switchIdx = 0;\n    console.log(this.props.lightSwitches);\n    const lightSwitches = this.props.lightSwitches.map(lSw => {\n      const newSwitch = (\n        <div\n          key={uuidv4()}\n          className={`circle circ${lSw === '1' ? switchIdx : ''}`}\n        />\n      );\n      switchIdx++;\n      return newSwitch;\n    });\n\n    return (\n      <a target=\"_blank\" href={url}>\n        <div className=\"Card\">\n          <div className=\"bizImgBox\">\n            <img src={img} alt=\"\" className=\"bizImg\" />\n            <div className=\"bizNumberHolder\">\n              <div className=\"bizNumber\">{idx}</div>\n            </div>\n          </div>\n          <div className=\"bizDetailsBox\">\n            <div className=\"bizName\">{name}</div>\n            <div className=\"bizAddress\">{location}</div>\n            <div className=\"bizDetailsImages\">\n              <img src={`./${rating}stars.png`} alt=\"\" className=\"stars\" />\n              <img src=\"./yelp_logo.png\" alt=\"\" className=\"yelpLogo\" />\n            </div>\n          </div>\n          <div className=\"circleColumn\">{lightSwitches}</div>\n        </div>\n      </a>\n    );\n  }\n}\n\nexport default Card;\n","import React, { Component } from 'react';\nimport Card from './Card';\nimport axios from 'axios';\nimport initialMsg from './text';\n\nconst openShiftUrl =\n  'https://app-yelp-express.1d35.starter-us-east-1.openshiftapps.com/';\n\nclass CardContainer extends Component {\n  state = { businesses: [], searchInitiated: false, loading: false };\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.terms.join('') !== nextProps.terms.join('')) {\n      this.getDataFromBackend(nextProps.terms, nextProps.location);\n    }\n  }\n\n  getDataFromBackend(terms, location) {\n    console.log(\n      `${openShiftUrl}?terms=${terms.join(',')}&location=${location}`\n    );\n    this.setState({ searchInitiated: true, loading: true });\n    axios\n      .get(\n        `${openShiftUrl}?terms=${terms.join(',')}&location=${location}`\n        // `http://localhost:3001?terms=${terms.join(',')}&location=${location}`\n      )\n      .then(res => {\n        const businesses = Object.values(res.data);\n        this.setState({ businesses, loading: false });\n        console.log('data loaded');\n      });\n  }\n\n  render() {\n    console.log('rendering CardContainer');\n    console.log(this.state.businesses);\n    let cardArray = [];\n    this.state.businesses.forEach((biz, idx) => {\n      let lightSwitches = [];\n      for (let term of this.props.terms) {\n        biz.terms.includes(term)\n          ? lightSwitches.push('1')\n          : lightSwitches.push('0');\n      }\n      cardArray.push(\n        <Card\n          name={biz.name}\n          url={biz.url}\n          key={biz.id}\n          img={biz.image_url}\n          idx={idx + 1}\n          rating={biz.rating}\n          location={biz.location.display_address[0]}\n          lightSwitches={lightSwitches}\n        />\n      );\n    });\n    let chicletIdx = 0;\n    const termChiclets = this.props.terms.map(term => {\n      return (\n        <div className=\"termChiclet\">\n          <div className={`circle circ${chicletIdx++}`} />\n          <div>{term}</div>\n        </div>\n      );\n    });\n\n    return (\n      <div className=\"CardContainer\">\n        {!this.state.loading && this.state.searchInitiated ? (\n          <div className=\"searchQuery\">\n            <div className=\"locChiclet\">{this.props.location}</div>\n            {termChiclets}\n          </div>\n        ) : (\n          ''\n        )}\n\n        <div className=\"cardList\">\n          {this.state.loading\n            ? 'loading'\n            : this.state.searchInitiated\n            ? cardArray\n            : initialMsg}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CardContainer;\n","const initialMsg = `Please provide a location and one or more search terms.\n   Yelp searches for each term will be collated and displayed here.`;\n\nexport default initialMsg;\n","import React, { Component } from 'react';\nimport uuidv1 from 'uuid/v1';\n\n// inputValue => termInput\n// add: locInput\n\nclass SearchBar extends Component {\n  state = {\n    terms: [],\n    termInput: '',\n    locInput: '',\n    location: '',\n    invalidSearch: false\n  };\n\n  handleChange = evt => {\n    this.setState({ [evt.target.name]: evt.target.value });\n  };\n\n  handleAddTerm = evt => {\n    evt.preventDefault();\n    if (this.state.terms.length > 3) {\n      this.setState({\n        terms: [...this.state.terms.slice(1), this.state.termInput],\n        termInput: ''\n      });\n    } else {\n      this.setState({\n        terms: [...this.state.terms, this.state.termInput],\n        termInput: ''\n      });\n    }\n    evt.target.reset();\n  };\n\n  handleRemoveTerm = deletedTerm => {\n    console.log(deletedTerm);\n    const updatedTerms = this.state.terms.filter(term => {\n      return term !== deletedTerm;\n    });\n    this.setState({ terms: updatedTerms });\n  };\n\n  handleSetLocation = evt => {\n    evt.preventDefault();\n    this.setState({ location: this.state.locInput, locInput: '' });\n  };\n\n  handleSubmitSearch = evt => {\n    const passedTerms = this.state.terms;\n    const passedLocation = this.state.location;\n    if (passedTerms.length === 0 || passedLocation === '') {\n      console.log('invalid search');\n      this.setState({ invalidSearch: true });\n      return;\n    }\n    this.props.triggerSearch(passedTerms, passedLocation);\n    this.setState({\n      terms: [],\n      termInput: '',\n      locInput: '',\n      location: '',\n      invalidSearch: false\n    });\n  };\n\n  render() {\n    const terms = this.state.terms.map(term => {\n      return (\n        <div\n          className=\"providedTerm  ticTac\"\n          onClick={() => this.handleRemoveTerm(term)}\n          key={uuidv1()}\n        >\n          {term} <span className=\"tinyX\">X</span>\n        </div>\n      );\n    });\n    const location = this.state.location;\n    return (\n      <div className=\"searchBar\">\n        <div className=\"searchConfig\">\n          <form onSubmit={this.handleSetLocation}>\n            <label className=\"searchLabel\">Set search location:</label>\n            <div className=\"inputChiclet\">\n              <input\n                type=\"text\"\n                name=\"locInput\"\n                value={this.state.locInput}\n                onChange={this.handleChange}\n                className=\"textInput\"\n              />\n              <input type=\"submit\" value=\"SET\" className=\"submitInput\" />\n            </div>\n            {location ? (\n              <div className=\"providedLoc ticTac\"> {location} </div>\n            ) : (\n              ''\n            )}\n          </form>\n          <form onSubmit={this.handleAddTerm}>\n            <label className=\"searchLabel\">Add search term:</label>\n            <div className=\"inputChiclet\">\n              <input\n                type=\"text\"\n                name=\"termInput\"\n                value={this.state.termInput}\n                onChange={this.handleChange}\n                className=\"textInput\"\n              />\n              <input type=\"submit\" value=\"ADD\" className=\"submitInput\" />\n            </div>\n            <div className=\"termsHolder\">{terms.length ? terms : ''}</div>\n          </form>\n          {/* {this.state.invalidSearch ? invalidMsg : ''} */}\n        </div>\n        <div className=\"submitBtnHolder\">\n          <button onClick={this.handleSubmitSearch} className=\"submitBtn\">\n            Search\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SearchBar;\n","import React, { Component } from 'react';\nimport CardContainer from './CardContainer';\nimport SearchBar from './SearchBar';\nimport './output.css';\n\nclass App extends Component {\n  state = { terms: [], location: '' };\n\n  triggerSearch = (passedTerms, passedLocation) => {\n    this.setState({ terms: passedTerms, location: passedLocation });\n    console.log('a search', passedTerms, passedLocation);\n  };\n\n  render() {\n    const { terms, location } = this.state;\n    return (\n      <div className=\"App\">\n        <div className=\"header\">\n          <span className=\"acronym\">MYSC</span>\n          <span className=\"fullName\">Multiple Yelp Search Collator</span>\n        </div>\n        <SearchBar\n          triggerSearch={(passedTerms, passedLocation) =>\n            this.triggerSearch(passedTerms, passedLocation)\n          }\n        />\n        <CardContainer terms={terms} location={location} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}