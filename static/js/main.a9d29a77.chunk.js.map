{"version":3,"sources":["SearchBar.js","Card.js","CardContainer.js","Legend.js","ContentArea.js","text.js","App.js","serviceWorker.js","index.js"],"names":["SearchBar","state","terms","termInput","locInput","location","invalidSearch","handleChange","evt","_this","setState","Object","defineProperty","target","name","value","handleAddTerm","preventDefault","length","toConsumableArray","slice","concat","reset","handleRemoveTerm","deletedTerm","console","log","updatedTerms","filter","term","handleSetLocation","handleSubmitSearch","passedTerms","passedLocation","props","triggerSearch","_this2","this","map","react_default","a","createElement","className","onClick","key","uuidv1","onSubmit","type","onChange","Component","Card","_this$props","url","img","idx","rating","switchIdx","lightSwitches","lSw","newSwitch","uuidv4","rel","href","src","alt","CardContainer","cardArray","businesses","forEach","biz","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","includes","push","err","return","src_Card","id","image_url","display_address","Legend","chicletIdx","termChiclets","openShiftUrl","ContentArea","searchInitiated","loading","nextProps","join","getDataFromBackend","axios","get","then","res","values","data","src_Legend","src_CardContainer","App","_this$state","src_SearchBar","src_ContentArea","Boolean","window","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a9d29a77.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport uuidv1 from 'uuid/v1';\n\nclass SearchBar extends Component {\n  state = {\n    terms: [],\n    termInput: '',\n    locInput: '',\n    location: '',\n    invalidSearch: false\n  };\n\n  handleChange = evt => {\n    this.setState({ [evt.target.name]: evt.target.value });\n  };\n\n  handleAddTerm = evt => {\n    evt.preventDefault();\n    if (this.state.termInput.length === 0) return;\n    if (this.state.terms.length > 3) {\n      this.setState({\n        terms: [...this.state.terms.slice(1), this.state.termInput],\n        termInput: ''\n      });\n    } else {\n      this.setState({\n        terms: [...this.state.terms, this.state.termInput],\n        termInput: ''\n      });\n    }\n    evt.target.reset();\n  };\n\n  handleRemoveTerm = deletedTerm => {\n    console.log(deletedTerm);\n    const updatedTerms = this.state.terms.filter(term => {\n      return term !== deletedTerm;\n    });\n    this.setState({ terms: updatedTerms });\n  };\n\n  handleSetLocation = evt => {\n    evt.preventDefault();\n    if (this.state.locInput.length === 0) return;\n    this.setState({ location: this.state.locInput, locInput: '' });\n  };\n\n  handleSubmitSearch = evt => {\n    const passedTerms = this.state.terms;\n    const passedLocation = this.state.location;\n    if (passedTerms.length === 0 || passedLocation === '') {\n      console.log('invalid search');\n      this.setState({ invalidSearch: true });\n      return;\n    }\n    this.props.triggerSearch(passedTerms, passedLocation);\n    this.setState({\n      terms: [],\n      termInput: '',\n      locInput: '',\n      location: '',\n      invalidSearch: false\n    });\n  };\n\n  render() {\n    const terms = this.state.terms.map(term => {\n      return (\n        <div\n          className=\"providedTerm  ticTac\"\n          onClick={() => this.handleRemoveTerm(term)}\n          key={uuidv1()}\n        >\n          {term} <span className=\"tinyX\">X</span>\n        </div>\n      );\n    });\n    const location = this.state.location;\n    return (\n      <div className=\"searchBar\">\n        <div className=\"searchConfig\">\n          <form onSubmit={this.handleSetLocation}>\n            <label className=\"searchLabel\">Set search location:</label>\n            <div className=\"inputChiclet\">\n              <input\n                type=\"text\"\n                name=\"locInput\"\n                value={this.state.locInput}\n                onChange={this.handleChange}\n                className=\"textInput\"\n              />\n              <input type=\"submit\" value=\"SET\" className=\"submitInput\" />\n            </div>\n            {location ? (\n              <div className=\"providedLoc ticTac\"> {location} </div>\n            ) : (\n              ''\n            )}\n          </form>\n          <form onSubmit={this.handleAddTerm}>\n            <label className=\"searchLabel\">Add search term:</label>\n            <div className=\"inputChiclet\">\n              <input\n                type=\"text\"\n                name=\"termInput\"\n                value={this.state.termInput}\n                onChange={this.handleChange}\n                className=\"textInput\"\n              />\n              <input type=\"submit\" value=\"ADD\" className=\"submitInput\" />\n            </div>\n            <div className=\"termsHolder\">{terms.length ? terms : ''}</div>\n          </form>\n        </div>\n        <div className=\"submitBtnHolder\">\n          <button onClick={this.handleSubmitSearch} className=\"submitBtn\">\n            Search\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SearchBar;\n","import React, { Component } from 'react';\nimport uuidv4 from 'uuid/v4';\n\nclass Card extends Component {\n  render() {\n    const { name, url, img, idx, rating, location } = this.props;\n    let switchIdx = 0;\n    const lightSwitches = this.props.lightSwitches.map(lSw => {\n      const newSwitch = (\n        <div\n          key={uuidv4()}\n          className={`circle circ${lSw === '1' ? switchIdx : ''}`}\n        />\n      );\n      switchIdx++;\n      return newSwitch;\n    });\n\n    return (\n      <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n        <div className=\"Card\">\n          <div className=\"bizImgBox\">\n            <img src={img} alt=\"\" className=\"bizImg\" />\n            <div className=\"bizNumberHolder\">\n              <div className=\"bizNumber\">{idx}</div>\n            </div>\n          </div>\n          <div className=\"bizDetailsBox\">\n            <div className=\"bizName\">{name}</div>\n            <div className=\"bizAddress\">{location}</div>\n            <div className=\"bizDetailsImages\">\n              <img src={`./${rating}stars.png`} alt=\"\" className=\"stars\" />\n              <img src=\"./yelp_logo.png\" alt=\"\" className=\"yelpLogo\" />\n            </div>\n          </div>\n          <div className=\"circleColumn\">{lightSwitches}</div>\n        </div>\n      </a>\n    );\n  }\n}\n\nexport default Card;\n","import React, { Component } from 'react';\nimport Card from './Card';\n\nclass CardContainer extends Component {\n  render() {\n    let cardArray = [];\n    this.props.businesses.forEach((biz, idx) => {\n      let lightSwitches = [];\n      for (let term of this.props.terms) {\n        biz.terms.includes(term)\n          ? lightSwitches.push('1')\n          : lightSwitches.push('0');\n      }\n      cardArray.push(\n        <Card\n          name={biz.name}\n          url={biz.url}\n          key={biz.id}\n          img={biz.image_url}\n          idx={idx + 1}\n          rating={biz.rating}\n          location={biz.location.display_address[0]}\n          lightSwitches={lightSwitches}\n        />\n      );\n    });\n\n    return <div className=\"CardContainer\">{cardArray}</div>;\n  }\n}\n\nexport default CardContainer;\n","import React, { Component } from 'react';\nimport uuidv1 from 'uuid/v1';\n\nclass Legend extends Component {\n  render() {\n    let chicletIdx = 0;\n    const termChiclets = this.props.terms.map(term => {\n      return (\n        <div className=\"termChiclet\" key={uuidv1()}>\n          <div className={`circle circ${chicletIdx++}`} />\n          <div>{term}</div>\n        </div>\n      );\n    });\n\n    return (\n      <div className=\"Legend\">\n        <div className=\"locChiclet\">{this.props.location}</div>\n        {termChiclets}\n      </div>\n    );\n  }\n}\n\nexport default Legend;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport initialMsg from './text';\nimport CardContainer from './CardContainer';\nimport Legend from './Legend';\n\nconst openShiftUrl =\n  'https://app-yelp-express.1d35.starter-us-east-1.openshiftapps.com/';\n\nclass ContentArea extends Component {\n  state = { businesses: [], searchInitiated: false, loading: false };\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.terms.join('') !== nextProps.terms.join('')) {\n      this.getDataFromBackend(nextProps.terms, nextProps.location);\n    }\n  }\n\n  getDataFromBackend(terms, location) {\n    console.log(\n      `${openShiftUrl}?terms=${terms.join(',')}&location=${location}`\n    );\n    this.setState({ searchInitiated: true, loading: true });\n    axios\n      .get(\n        `${openShiftUrl}?terms=${terms.join(',')}&location=${location}`\n        // `http://localhost:3001?terms=${terms.join(',')}&location=${location}`\n      )\n      .then(res => {\n        const businesses = Object.values(res.data);\n        this.setState({ businesses, loading: false });\n        console.log('data loaded');\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"ContentArea\">\n        {/* Renders legend once search submitted, else suggests a search */}\n        {this.state.searchInitiated ? (\n          <Legend terms={this.props.terms} location={this.props.location} />\n        ) : (\n          <div>{initialMsg}</div>\n        )}\n\n        {/* Renders nothing or loading spinner or \"no results found\" or result cards */}\n        {!this.state.searchInitiated ? (\n          ''\n        ) : this.state.loading ? (\n          'loading'\n        ) : !this.state.businesses.length ? (\n          'No results for any of the provided search criteria.'\n        ) : (\n          <CardContainer\n            businesses={this.state.businesses}\n            terms={this.props.terms}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default ContentArea;\n","const initialMsg = `Please provide a location and one or more search terms.\n   Yelp searches for each term will be collated and displayed here.`;\n\nexport default initialMsg;\n","import React, { Component } from 'react';\nimport SearchBar from './SearchBar';\nimport ContentArea from './ContentArea';\nimport './output.css';\n\nclass App extends Component {\n  state = { terms: [], location: '' };\n\n  triggerSearch = (passedTerms, passedLocation) => {\n    this.setState({ terms: passedTerms, location: passedLocation });\n  };\n\n  render() {\n    const { terms, location } = this.state;\n    return (\n      <div className=\"App\">\n        <div className=\"header\">\n          <span className=\"acronym\">MYSC</span>\n          <span className=\"fullName\">Multiple Yelp Search Collator</span>\n        </div>\n        <SearchBar\n          triggerSearch={(passedTerms, passedLocation) =>\n            this.triggerSearch(passedTerms, passedLocation)\n          }\n        />\n        <ContentArea terms={terms} location={location} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}